### Задача 1: Компонент профиля пользователя
**Описание:** Создайте компонент `UserProfile`, который принимает
следующие props: `name`, `age`, `location`. Отображайте эти данные в простом
шаблоне профиля.
**Пример использования:**
```jsx
<UserProfile name="John Doe" age={30} location="New York" />
```
**Требования:**
- Отобразить имя, возраст и местоположение пользователя.
- Структурируйте вывод данных в понятном формате (например, карточка
профиля).
### Задача 2: Список задач
**Описание:** Создайте компонент `TodoList`, который принимает массив
задач через props и отображает их в виде списка. Каждая задача должна
иметь текст и статус выполнения (выполнено/не выполнено).
**Пример использования:**
```jsx
const tasks = [
{ text: "Buy groceries", completed: false },
{ text: "Walk the dog", completed: true }
];
<TodoList tasks={tasks} />
```
**Требования:**
- Отобразить текст каждой задачи.
- Визуально различать выполненные и невыполненные задачи (например,
зачеркнутый текст для выполненных).
### Задача 3: Калькулятор сложения
**Описание:** Создайте компонент `Adder`, который принимает два числа
через props и отображает их сумму.
**Пример использования:**
```jsx
<Adder num1={5} num2={10} />
```
**Требования:**
- Вычислить сумму двух чисел и отобразить результат.
- Обновить результат, если изменятся props.
### Задача 4: Карточка продукта
**Описание:** Создайте компонент `ProductCard`, который принимает props:
`title`, `price`, `description` и `imageUrl`. Отображайте информацию о продукте в
виде карточки с картинкой и текстом.
**Пример использования:**
```jsx
<ProductCard
title="Laptop"
price={999.99}
description="A high-performance laptop"
imageUrl="http://example.com/laptop.jpg"
/>
```
**Требования:**
- Отобразить название продукта, цену, описание и изображение.
- Структурируйте карточку так, чтобы она выглядела привлекательно
(например, используя CSS).
### Задача 5: Селектор цвета
**Описание:** Создайте компонент `ColorSelector`, который принимает массив
цветов через props и позволяет пользователю выбрать цвет из выпадающего
списка. Отображайте выбранный цвет в виде цветного квадрата.
**Пример использования:**
```jsx
const colors = ["red", "green", "blue"];
<ColorSelector colors={colors} />
```
**Требования:**
- Создать выпадающий список с опциями для выбора цвета.
- Отобразить выбранный цвет в виде цветного квадрата.
- Обновить квадрат при изменении выбора.